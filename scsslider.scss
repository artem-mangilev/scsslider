@mixin scsslider(
  $image-urls,
  $slide-animation-time: 3,
  $delay: 3,
  $timing-function: ease-in-out
) {
  @if ($timing-function != ease-in-out) {
    @error 'Only the ease-in-out timing function is supported';
  }

  $number-of-slides: length($image-urls);
  $total-animation-time: ($slide-animation-time + $delay) * $number-of-slides;

  $max: 10000;
  $slider-id: random($max);

  & {
    position: relative;

    & > .slider-content {
      width: 100%;
      height: 100%;
      z-index: 2;
    }

    & > .slides-container {
      width: 100%;
      height: 100%;
      position: absolute;
      top: 0;
      left: 0;

      & > .slide {
        width: 100%;
        height: 100%;
        position: absolute;
        top: 0;
        left: 0;
        background-repeat: none;
        filter: opacity(0);
        animation: (scsslider- + $slider-id) ($total-animation-time + s)
          $timing-function infinite;

        $currentDelay: 0;
        @each $url in $image-urls {
          $index: index($image-urls, $url);
          &:nth-child(#{$index}) {
            background-image: url($url);
            animation-delay: $currentDelay + s;
            $currentDelay: $currentDelay + ($slide-animation-time + $delay);
          }
        }
      }
    }
  }

  $fade-in-percent: ($slide-animation-time / $total-animation-time) * 100;
  $delay-percent: $fade-in-percent + (($delay / $total-animation-time) * 100);
  $fade-out-percent: $delay-percent + $fade-in-percent;
  @keyframes scsslider-#{$slider-id} {
    0% {
      filter: opacity(0);
      animation-timing-function: ease-in;
    }

    #{$fade-in-percent}% {
      filter: opacity(1);
      animation-timing-function: ease-out;
    }

    #{$delay-percent}% {
      filter: opacity(1);
    }

    #{$fade-out-percent}% {
      filter: opacity(0);
    }

    100% {
      filter: opacity(0);
    }
  }
}
